Pipeline: pipeline {
    agent any
    
    parameters{
        base64File 'inputFile'
    }

    environment {
        REPO_URL = 'https://github.com/RubenMailloBaena/JenkinsPipelineTest.git'
        BRANCH = 'main'
        ARCHIVO = 'test.txt'
    }

    stages {
        stage('Prepare Workspace') {
            steps {
                script {
                    powershell '''
                        if (Test-Path -Path repo-temp) {
                            Remove-Item -Path repo-temp -Recurse -Force
                        }
                        mkdir repo-temp
                    '''
                }
            }
        }

        stage('Clonar archivo específico') { //git remote add origin ${REPO_URL} // git remote add origin https://${github-user}:${github-password}@${REPO_URL.replace("https://", "")}
            steps {
                script {
                    powershell """
                    cd repo-temp
                    git init
                    git remote add origin ${REPO_URL}
                    git config core.sparseCheckout true
                    "${ARCHIVO}" | Out-File -FilePath .git/info/sparse-checkout -Encoding ascii
                    git pull origin ${BRANCH}
                """
                }
            }
        }

        stage('Mostrar contenido de los archivos') {
            steps {
                script {
                    // MOSTRAR ARCHIVO DE GITHUB
                    powershell """
                        echo "=== GitHub File ==="
                        Get-Content .\\repo-temp\\${ARCHIVO}
                    """
                }
                
                script {
                   // Mostrar nombre del archivo
                    echo "=== Input File ==="
                    
                    withFileParameter('inputFile') {
                        powershell 'Get-Content -Path $env:inputFile'
                    }
                }
            }
        }
    }
}



-----------------------------------

pipeline {
    agent any

    parameters {
        file(name: 'inputFile', description: 'Archivo .txt que se imprimirá durante la build')
    }

    environment {
        REPO_URL = 'https://github.com/TU_USUARIO/TU_REPO.git'
        BRANCH = 'main'
        ARCHIVO = 'test.txt'
    }

    stages {

        stage('Preparar Workspace') {
            steps {
                script {
                    powershell '''
                        if (Test-Path -Path repo-temp) {
                            Remove-Item -Recurse -Force repo-temp
                        }
                        mkdir repo-temp
                    '''
                }
            }
        }

        stage('Clonar repositorio') {
            steps {
                dir('repo-temp') {
                    git branch: "${env.BRANCH}", url: "${env.REPO_URL}"
                }
            }
        }

        stage('Mostrar archivo del repo') {
            steps {
                powershell 'Get-Content .\\repo-temp\\' + ARCHIVO
            }
        }

        stage('Mostrar archivo input') {
            steps {
                withFileParameter('inputFile') {
                    powershell 'Get-Content "$env:inputFile"'
                }
            }
        }

        stage('Compilar con Ant') {
            steps {
                withFileParameter('inputFile') {
                    dir('repo-temp') {
                        powershell 'ant -Dinput.file="$env:inputFile"'
                    }
                }
            }
        }
    }
}

-----------------------------
[Pipeline] { (Compilar con Ant task)
[Pipeline] withFileParameter
[Pipeline] {
[Pipeline] dir
Running in C:\ProgramData\Jenkins\.jenkins\workspace\test-pipeline\repo-temp
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] tool
[Pipeline] tool
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\test-pipeline\repo-temp>set INPUT_FILE=C:\ProgramData\Jenkins\.jenkins\workspace\test-pipeline@tmp\inputFile5141864217430742661.tmp 

C:\ProgramData\Jenkins\.jenkins\workspace\test-pipeline\repo-temp>"C:\ProgramData\Jenkins\.jenkins\tools\hudson.tasks.Ant_AntInstallation\Ant_Installation\bin\ant.bat" -Dinput.file=C:\ProgramData\Jenkins\.jenkins\workspace\test-pipeline@tmp\inputFile5141864217430742661.tmp 
Buildfile: C:\ProgramData\Jenkins\.jenkins\workspace\test-pipeline\repo-temp\build.xml

clean:

BUILD FAILED
C:\ProgramData\Jenkins\.jenkins\workspace\test-pipeline\repo-temp\build.xml:8: Execute failed: java.io.IOException: Cannot run program "${env.MVN_CMD}" (in directory "C:\ProgramData\Jenkins\.jenkins\workspace\test-pipeline\repo-temp\microservice_pipeline_test"): CreateProcess error=2, El sistema no puede encontrar el archivo especificado
-------------------------

pipeline {
    agent any
    
    parameters{
       base64File 'inputFile'
    }

    environment {
        REPO_URL = 'https://github.com/RubenMailloBaena/JenkinsPipelineTest.git'
        BRANCH = 'main'
        ARCHIVO = 'test.txt'
    }

    stages {
        stage('Prepare Workspace') {
            steps {
                script {
                    powershell '''
                        if (Test-Path -Path repo-temp) {
                            Remove-Item -Path repo-temp -Recurse -Force
                        }
                        mkdir repo-temp
                    '''
                }
            }
        }

        stage('CLonar Repositorio') { 
            steps {
                dir('repo-temp'){
                    git branch: "${env.BRANCH}", url: "${env.REPO_URL}"
                }
            }
        }

        stage('Mostrar archivo del repo') {
            steps {
                powershell 'Get-Content .\\repo-temp\\' + ARCHIVO
            }
        }
        
        stage('Mostrar archivo de input'){
            steps{
                withFileParameter('inputFile'){
                    powershell 'Get-Content -Path $env:inputFile'
                }
            }
        }
        
        stage('Compilar con Ant task'){
            steps{
                withFileParameter('inputFile'){
                    dir('repo-temp'){
                        script{
                            def antHome = tool name: 'Ant Installation', type: 'hudson.tasks.Ant$AntInstallation'
                            def antCmd = "\"${antHome}\\bin\\ant.bat\""
                            
                            def mavenHome = tool name: 'Maven Installation', type: 'hudson.tasks.Maven$MavenInstallation'
                            def mvnCmd = "${mavenHome}\\bin\\mvn.bat" 
                            
                            powershell """
                                \$inputFile = "\$env:inputFile"
                                & ${antCmd} "-Dinput.file=\$inputFile" "-Denv.MVN_CMD=${mvnCmd}"
                            """
                        }
                    }
                }
            }
        }
    }
}

